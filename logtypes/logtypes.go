/*
Copyright 2022 Doug Edgar.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package logtypes

// PodLog contains select metadata around a Kubernetes/OpenShift pod
type PodLog struct {
	User      string `json:"user,omitempty"`
	Namespace string `json:"namespace,omitempty"`
	PodName   string `json:"podName,omitempty"`
	HostIP    string `json:"hostIP,omitempty"`
	PodIP     string `json:"podIP,omitempty"`
	StartTime int64  `json:"startTime,omitempty"`
	UUID      string `json:"uuid,omitempty"`
	ClusterID string `json:"clusterID,omitempty"`
}

// ScanResult represents a scan result generated by an antivirus scanner.
type ScanResult struct {
	User        string   `json:"user,omitempty"`
	Namespace   string   `json:"namespace,omitempty"`
	PodName     string   `json:"podName,omitempty"`
	HostIP      string   `json:"hostIP,omitempty"`
	PodIP       string   `json:"podIP,omitempty"`
	StartTime   int64    `json:"startTime,omitempty"`
	UUID        string   `json:"uuid,omitempty"`
	ClusterID   string   `json:"clusterID,omitempty"`
	ContainerID string   `json:"containerID,omitempty"`
	ImageID     string   `json:"imageID,omitempty"`
	ImageName   string   `json:"imageName,omitempty"`
	ImageSource string   `json:"imageSource,omitempty"`
	Results     []Result `json:"results,omitempty"`
}

// Result is the individual result about a file that positively matched an antivirus signature
type Result struct {
	Description    string `json:"description"`
	FilePath       string `json:"filePath"`
	ScannerName    string `json:"scannerName"`
	ScannerVersion string `json:"scannerVersion"`
	SignatureName  string `json:"signatureName"`
	Timestamp      int64  `json:"timestamp"`
}
